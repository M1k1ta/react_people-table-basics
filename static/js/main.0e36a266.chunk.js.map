{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/Human/Human.tsx","components/PeopleTable/PeopleTabe.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","to","classNames","Human","React","memo","match","useMatch","born","died","motherName","fatherName","mother","father","params","PeopleTable","people","map","human","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","loadPeople","peopleFromServer","useEffect","arePeople","length","Navbar","text","isActive","HomePage","NotFoundPage","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0e36a266.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`../:${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { useMatch } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const Human: FC<Props> = React.memo(({ person }) => {\n  const match = useMatch('/people/:slug');\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n    mother = null,\n    father = null,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': match?.params.slug === `:${slug}`,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n});\n","import React, { FC } from 'react';\nimport { Person } from '../../types';\nimport { Human } from '../Human';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = React.memo(({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const human = {\n          ...person,\n          father: people.find(({ name }) => (\n            name === person.fatherName\n          )),\n          mother: people.find(({ name }) => (\n            name === person.motherName\n          )),\n        };\n\n        return (\n          <Human key={person.name} person={human} />\n        );\n      })}\n    </tbody>\n  </table>\n));\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsLoadError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const arePeople = people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && isLoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !arePeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && arePeople && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const Navbar: FC<Props> = React.memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navbar to=\"/\" text=\"Home\" />\n          <Navbar to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}